###############################################################
# This configuration file lets you
# - define new commands
# - change the shortcut or triggering keys of built-in verbs
# - change the colors
# - set default values for flags
# - set special behaviors on specific paths
# - and more...
#
# Configuration documentation is available at
#     https://dystroy.org/broot
#
# This file's format is Hjson ( https://hjson.github.io/ ). Some
#Â properties are commented out. To enable them, remove the `#`.
#
###############################################################
{

	###############################################################
	# Default flags
	# You can set up flags you want broot to start with by
	# default, for example `default_flags="ihp"` if you usually want
	# to see hidden and gitignored files and the permissions (then
	# if you don't want the hidden files you can launch `br -H`)
	# A popular flag is the `g` one which displays git related info.
	#
	# default_flags:

	###############################################################
	# Date/Time format
	# If you want to change the format for date/time, uncomment the
	# following line and change it according to
	# https://docs.rs/chrono/0.4.11/chrono/format/strftime/index.html
	#
	# date_time_format: %Y/%m/%d %R

        ###############################################################
        # uncomment to activate modal mode
	#
	# (you really should read https://dystroy.org/broot/modal/
	# before as it may not suit everybody even among vim users)
	#
        # modal: true

	###############################################################
	# Whether to mark the selected line with a triangle
	#
	show_selection_mark: true

	###############################################################
	# Column order
	# cols_order, if specified, must be a permutation of the following
	# array. You should keep the name at the end as it has a variable
	# length.
	#
	# cols_order: [
	# 	mark
	# 	git
	# 	size
	# 	permission
	# 	date
	# 	count
	# 	branch
	# 	name
	# ]

	###############################################################
	# True Colors
	# If this parameter isn't set, broot tries to automatically
	# determine whether true colors (24 bits) are available.
	# As this process is unreliable, you may uncomment this setting
	# and set it to false or true if you notice the colors in
	# previewed images are too off.
	#
	# true_colors: false

	###############################################################
	# Icons
	# If you want to display icons in broot, uncomment this line
	# (see https://dystroy.org/broot/icons for installation and
	# troubleshooting)
	#
	# icon_theme: vscode

	###############################################################
	# Special paths
	# If some paths must be handled specially, uncomment (and change
	# this section as per the examples)
	#
	# special_paths: {
	# 	"/media/slow-backup-disk"		: no-enter
	# 	"/home/dys/useless"			: hide
	# 	"/home/dys/my-link-I-want-to-explore"	: enter
	# }

	###############################################################
	# Quit on last cancel
	# You can usually cancel the last state change on escape.
	# If you want the escape key to quit broot when there's nothing
	# to cancel (for example when you just opened broot), uncomment
	# this parameter
	#
	# quit_on_last_cancel: true

	###############################################################
	# Search modes
	#
	# broot allows many search modes.
	# A search mode is defined by
	# - the way to search: 'fuzzy', 'exact', 'regex', or 'tokens'.
	# - where to search: file 'name', 'path', or file 'content'
	# A search pattern may for example be "fuzzy path" (default),
	# "regex content" or "exact path".
	#
	# The search mode is selected from its prefix. For example, if
	# you type "abc", the default mode is "fuzzy path". If you type
	# "/abc", the mode is "regex path". If you type "rn/abc", the mode
	# is "regex name".
	#
	# This mapping may be modified. You may want to dedicate the
	# empty prefix (the one which doesn't need a '/') to the
	# search mode you use most often. The example below makes it
	# easy to search on name rather than on the subpath.
	#
	# More information on
	#  https://dystroy.org/broot/input/#the-filtering-pattern
	#
	# search_modes: {
	#     <empty>: fuzzy name
	#     /: regex name
	# }

	###############################################################
	# Verbs and shortcuts
	# You can define your own commands which would be applied to
	# the selection.
	# You'll also find below verbs that you can customize or enable.
	verbs: [

		# Example 1: launching `tail -n` on the selected file (leaving broot)
		# {
		# 	name: tail_lines
		# 	invocation: tl {lines_count}
		# 	execution: "tail -f -n {lines_count} {file}"
		# }

		# Example 2: creating a new file without leaving broot
		# {
		# 	name: touch
		# 	invocation: touch {new_file}
		# 	execution: "touch {directory}/{new_file}"
		# 	leave_broot: false
		# }

		# A standard recommended command for editing files, that you
		# can customize.
		# If $EDITOR isn't set on your computer, you should either set it using
		#  something similar to
		#   export EDITOR=nvim
		#  or just replace it with your editor of choice in the 'execution'
		#  pattern.
		#  If your editor is able to open a file on a specific line, use {line}
		#   so that you may jump directly at the right line from a preview.
		# Example:
		#  execution: nvim +{line} {file}
		{
			invocation: edit
			shortcut: e
			execution: "$EDITOR +{line} {file}"
			leave_broot: false
		}

		# A convenient shortcut to create new text files in
		# the current directory or below
		{
			invocation: create {subpath}
			execution: "$EDITOR {directory}/{subpath}"
			leave_broot: false
		}

		{
			invocation: git_diff
			shortcut: gd
			leave_broot: false
			execution: "git difftool -y {file}"
		}

		# On ctrl-b, propose the creation of a copy of the selection.
		# While this might occasionally be useful, this verb is mostly here
		# as an example to demonstrate rare standard groups like {file-stem}
		# and {file-dot-extension} and the auto_exec verb property which
		# allows verbs not executed until you hit enter
		{
			invocation: "backup {version}"
			key: ctrl-b
			leave_broot: false
			auto_exec: false
			execution: "cp -r {file} {parent}/{file-stem}-{version}{file-dot-extension}"
		}

		# This verb lets you launch a terminal on ctrl-T
		# (on exit you'll be back in broot)
		{
			invocation: terminal
			key: ctrl-t
			execution: "$SHELL"
			set_working_dir: true
			leave_broot: false
		}

		# Here's an example of a shortcut bringing you to your home directory
		# {
		# 	invocation: home
		# 	key: ctrl-home
		# 	execution: ":focus ~"
		# }

		# A popular set of shortcuts for going up and down:
		#
		# {
		# 	key: ctrl-k
		# 	execution: ":line_up"
		# }
		# {
		# 	key: ctrl-j
		# 	execution: ":line_down"
		# }
		# {
		# 	key: ctrl-u
		# 	execution: ":page_up"
		# }
		# {
		# 	key: ctrl-d
		# 	execution: ":page_down"
		# }

		# If you develop using git, you might like to often switch
		# to the git status filter:
		# {
		# 	key: ctrl-g
		# 	execution: ":toggle_git_status"
		# }

		# You can reproduce the bindings of Norton Commander
		# on copying or moving to the other panel:
		# {
		# 	key: F5
		# 	external: "cp -r {file} {other-panel-directory}"
		# 	leave_broot: false
		# }
		# {
		# 	key: F6
		# 	external: "mv {file} {other-panel-directory}"
		# 	leave_broot: false
		# }
	]

	###############################################################
	# Skin
	# If you want to change the colors of broot,
	# uncomment the following bloc and start messing
	# with the various values.
	# A skin entry value is made of two parts separated with a '/':
	# The first one is the skin for the active panel.
	# The second one, optional, is the skin for non active panels.
	# You may find explanations and other skins on
	#  https://dystroy.org/broot/skins
	###############################################################
	skin: {
		input: rgb(205, 214, 244) none
		# fg:none bg:$surface2
		selected_line: none rgb(88, 91, 112)
		# fg:$text bg:none
		default: rgb(205, 214, 244) none
		# fg:$overlay0 bg:none
		tree: rgb(108, 112, 134) none
		# fg:$sapphire bg:none
		parent: rgb(116, 199, 236) none
		file: none none
	#
	### PERMISSIONS
	#
		perm__: rgb(186, 194, 222) none
		# $peach
		perm_r: rgb(250, 179, 135) none
		# $maroon
		perm_w: rgb(235, 160, 172) none
		# $green
		perm_x: rgb(166, 227, 161) none
		# $teal
		owner: rgb(148, 226, 213) none
		# $sky
		group: rgb(137, 220, 235) none
	#
	### DATE
	#
		# $subtext1
		dates: rgb(186, 194, 222) none
	#
	### DIRECTORY
	#
		# $lavender
		directory: rgb(180, 190, 254) none Bold
		# $green
		exe: rgb(166, 227, 161) none
		# $yellow
		link: rgb(249, 226, 175) none
		# $subtext0
		pruning: rgb(166, 173, 200) none Italic
	#
	### PREVIEW
	#
		# fg:$text bg:$mantle
		preview_title: rgb(205, 214, 244) rgb(24, 24, 37)
		# fg:$text bg:$mantle
		preview: rgb(205, 214, 244) rgb(24, 24, 37)
		# fg:$overlay0
		preview_line_number: rgb(108, 112, 134) none
	#
	### MATCH
	#
		char_match: rgb(249, 226, 175) rgb(69, 71, 90) Bold Italic
		content_match: rgb(249, 226, 175) rgb(69, 71, 90) Bold Italic
		preview_match: rgb(249, 226, 175) rgb(69, 71, 90) Bold Italic

		# children count
		# fg:$yellow bg:none
		count: rgb(249, 226, 175) none
		sparse: rgb(243, 139, 168) none
		content_extract: rgb(243, 139, 168) none Italic
	#
	### GIT
	#
		git_branch: rgb(250, 179, 135) none
		git_insertions: rgb(250, 179, 135) none
		git_deletions: rgb(250, 179, 135) none
		git_status_current: rgb(250, 179, 135) none
		git_status_modified: rgb(250, 179, 135) none
		git_status_new: rgb(250, 179, 135) none Bold
		git_status_ignored: rgb(250, 179, 135) none
		git_status_conflicted: rgb(250, 179, 135) none
		git_status_other: rgb(250, 179, 135) none
		staging_area_title: rgb(250, 179, 135) none
	#
	### FLAG
	#
		flag_label: rgb(243, 139, 168) none
		flag_value: rgb(243, 139, 168) none Bold
	#
	### STATUS
	#
		# fg:none #bg:$mantle
		status_normal: none rgb(24, 24, 37)
		# fg:$red bg:$mantle
		status_italic: rgb(243, 139, 168) rgb(24, 24, 37) Italic
		# fg:$maroon bg:$mantle
		status_bold: rgb(235, 160, 172) rgb(24, 24, 37) Bold
		# fg:$maroon bg:$mantle
		status_ellipsis: rgb(235, 160, 172) rgb(24, 24, 37) Bold
		# fg:$text bg:$red
		status_error: rgb(205, 214, 244) rgb(243, 139, 168)
		# fg:$maroon bg:$mantle
		status_job: rgb(235, 160, 172) rgb(40, 38, 37)
		# fg:$maroon bg:$mantle
		status_code: rgb(235, 160, 172) rgb(24, 24, 37) Italic
		# fg:$maroon bg:$mantle
		mode_command_mark: rgb(235, 160, 172) rgb(24, 24, 37) Bold
	#
	### HELP
	#
		# fg:$text
		help_paragraph: rgb(205, 214, 244) none
		# fg:$red
		help_headers: rgb(243, 139, 168) none Bold
		# fg:$peach
		help_bold: rgb(250, 179, 135) none Bold
		# fg:$yellow
		help_italic: rgb(249, 226, 175) none Italic
		# fg:green bg:$surface0
		help_code: rgb(166, 227, 161) rgb(49, 50, 68)
		# fg:$overlay0
		help_table_border: rgb(108, 112, 134) none
	#
	### HEX
	#
		# fg:$text
		hex_null: rgb(205, 214, 244) none
		# fg:$peach
		hex_ascii_graphic: rgb(250, 179, 135) none
		# fg:$green
		hex_ascii_whitespace: rgb(166, 227, 161) none
		# fg: teal
		hex_ascii_other: rgb(148, 226, 213) none
		# fg: red
		hex_non_ascii: rgb(243, 139, 168) none

		# fg:$text bg:$red
		file_error: rgb(251, 73, 52) none
	#
	### PURPOSE
	#
		purpose_normal: none none
		purpose_italic: rgb(177, 98, 134) none Italic
		purpose_bold: rgb(177, 98, 134) none Bold
		purpose_ellipsis: none none
	#
	### SCROLLBAR
	#
		# fg:$surface0
		scrollbar_track: rgb(49, 50, 68) none
		# fg:$surface1
		scrollbar_thumb: rgb(88, 91, 112) none
	#
	### GOODTOBAD
	#
		good_to_bad_0: rgb(166, 227, 161) none
		good_to_bad_1: rgb(148, 226, 213) none
		good_to_bad_2: rgb(137, 220, 235) none
		good_to_bad_3: rgb(116, 199, 236) none
		good_to_bad_4: rgb(137, 180, 250) none
		good_to_bad_5: rgb(180, 190, 254) none
		good_to_bad_6: rgb(203, 166, 247) none
		good_to_bad_7: rgb(250, 179, 135) none
		good_to_bad_8: rgb(235, 160, 172) none
		good_to_bad_9: rgb(243, 139, 168) none
	}


	###############################################################
	# File Extension Colors
	#
	# uncomment and modify the next section if you want to color
	# file name depending on their extension
	#
	# ext_colors: {
	# 	png: rgb(255, 128, 75)
	# 	rs: yellow
	# }


	###############################################################
	# Max Panels Count
	#
	# Change this if you sometimes want to have more than 2 panels
	# open
	# max_panels_count: 2
}
